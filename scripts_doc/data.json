{
    "project": {},
    "files": {
        "scripts/BodyDef.api": {
            "name": "scripts/BodyDef.api",
            "modules": {},
            "classes": {
                "BodyDef": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "scripts/FixtureDef.api": {
            "name": "scripts/FixtureDef.api",
            "modules": {},
            "classes": {
                "FixtureDef": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "scripts/console.api": {
            "name": "scripts/console.api",
            "modules": {
                "utils": 1
            },
            "classes": {
                "console": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "scripts/world.api": {
            "name": "scripts/world.api",
            "modules": {
                "core": 1
            },
            "classes": {
                "world": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "core": {
            "name": "core",
            "submodules": {},
            "classes": {
                "BodyDef": 1,
                "FixtureDef": 1,
                "world": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "scripts/world.api",
            "line": 5
        },
        "utils": {
            "name": "utils",
            "submodules": {},
            "classes": {
                "console": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "scripts/console.api",
            "line": 5
        }
    },
    "classes": {
        "BodyDef": {
            "name": "BodyDef",
            "shortname": "BodyDef",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "scripts/BodyDef.api",
            "line": 5
        },
        "FixtureDef": {
            "name": "FixtureDef",
            "shortname": "FixtureDef",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "scripts/FixtureDef.api",
            "line": 5,
            "description": "A fixture is used to attach a shape to a body for collision detection. A\nfixture inherits its transform from its parent (BodyDef). Fixtures hold additional\nnon-geometric data / such as friction, collision filters, etc. Fixtures are\nattached to BodyDef by calling BodyDef::createFixture(fixtureDef).",
            "is_constructor": 1
        },
        "console": {
            "name": "console",
            "shortname": "console",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "utils",
            "namespace": "",
            "file": "scripts/console.api",
            "line": 5
        },
        "world": {
            "name": "world",
            "shortname": "world",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "scripts/world.api",
            "line": 5,
            "description": "This object represents your active world (currently displayed tab/window).\nThe main role of this object is creating and removing bodies. Also you can\nquery this object about bodies that are in the world or get acces to the\nstage that displaying them.",
            "final": 1
        }
    },
    "classitems": [
        {
            "file": "scripts/BodyDef.api",
            "line": 9,
            "itemtype": "method",
            "name": "createFixture",
            "params": [
                {
                    "name": "fixtureDef",
                    "description": "",
                    "type": "FixtureDef"
                }
            ],
            "class": "BodyDef",
            "module": "core"
        },
        {
            "file": "scripts/BodyDef.api",
            "line": 14,
            "itemtype": "property",
            "name": "fixtureList",
            "readonly": "",
            "type": "{Array}",
            "class": "BodyDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 16,
            "description": "This method return shape id. Which means what kind of data we are supouse to\nget from getShapeData method. Here is id map:\n\n    0 : circle\n    1 : edge       #currently not supported\n    2 : polygon\n    3 : chain      #currently not supported",
            "example": [
                "\n    var f = new FixtureDef;\n    f.setAsBox(100, 100);\n    f.getShapeType() # should return 2\n\nFor more information see getShapeData"
            ],
            "itemtype": "method",
            "name": "getShapeType",
            "return": {
                "description": "shape id",
                "type": "Int"
            },
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 37,
            "description": "This method return array of doubles. You can find out what this numbers\nrepresent by calling function getShapeType. Here are documentation what you\nwill get in array according to shape id.\n\n`Remember all the coordinates are relavtie to the body position !`\n\n    0 : circle\n    [ center.x, center.y, radious ]\n\n    2 : polygon\n    [ vertex1.x, vertex1.y, vertex2.x, vertex2.y , .... ]\n\n    # currently more types are not supported",
            "example": [
                "\n    \n    var f = new FixtureDef;\n    f.setAsCircle(30);\n    f.getShapeType() # should return 0\n    var data = f.getShapeData();\n    var circle = {\n      pos: {\n         x: data[0],\n         y: data[1]\n      },\n      radious: data[3]\n    };"
            ],
            "itemtype": "method",
            "name": "getShapeData",
            "return": {
                "description": "return array of data",
                "type": "Array"
            },
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 71,
            "itemtype": "method",
            "name": "setAsBox",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 77,
            "itemtype": "method",
            "name": "setAsCircle",
            "params": [
                {
                    "name": "radious",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 82,
            "description": "The lenght of array must be even. The are must consist of number which\nrepresents the vertex of polygon.\n\n    [ v1.x , v1.y , v2.x , v2.y , ....]",
            "example": [
                "\n    var f = new FixtureDef\n    f.setAsPolygon([ 100, 0, 0, 100, -100, 0 ]); # triangle\n    world.createBody(f) # now we should see our triangle on screen"
            ],
            "itemtype": "method",
            "name": "setAsPolygon",
            "params": [
                {
                    "name": "Array",
                    "description": "of numbers",
                    "type": "Array<Number>"
                }
            ],
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 97,
            "description": "The friction coefficient, usually in the range [0,1].",
            "itemtype": "property",
            "name": "friction",
            "type": "Number",
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 103,
            "description": "The density, usually in kg/m^2.",
            "itemtype": "property",
            "name": "density",
            "type": "Number",
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/FixtureDef.api",
            "line": 109,
            "description": "The restitution (elasticity) usually in the range [0,1].",
            "itemtype": "property",
            "name": "restitution",
            "type": "Number",
            "class": "FixtureDef",
            "module": "core"
        },
        {
            "file": "scripts/console.api",
            "line": 9,
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "console",
            "module": "utils"
        },
        {
            "file": "scripts/console.api",
            "line": 14,
            "description": "Clear the console output.",
            "itemtype": "method",
            "name": "clear",
            "class": "console",
            "module": "utils"
        },
        {
            "file": "scripts/world.api",
            "line": 15,
            "itemtype": "method",
            "name": "createBody",
            "params": [
                {
                    "name": "body_or_fixture",
                    "description": "",
                    "type": "BodyDef|FixtureDef",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "reference to newly created body",
                "type": "BodyDef"
            },
            "class": "world",
            "module": "core"
        },
        {
            "file": "scripts/world.api",
            "line": 21,
            "itemtype": "method",
            "name": "removeBody",
            "params": [
                {
                    "name": "bodyDef",
                    "description": "",
                    "type": "BodyDef"
                }
            ],
            "class": "world",
            "module": "core"
        },
        {
            "file": "scripts/world.api",
            "line": 26,
            "description": "This method return all bodies that are in the world.",
            "itemtype": "method",
            "name": "getBodies",
            "return": {
                "description": "array of bodies",
                "type": "Array"
            },
            "class": "world",
            "module": "core"
        },
        {
            "file": "scripts/world.api",
            "line": 32,
            "description": "This method return body of given id, if body doesn't exist it will return\nundefined",
            "itemtype": "method",
            "name": "getBodyById",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "BodyDef"
            },
            "class": "world",
            "module": "core"
        },
        {
            "file": "scripts/world.api",
            "line": 40,
            "description": "The stage that displays bodies",
            "itemtype": "property",
            "name": "stage",
            "readonly": "",
            "class": "world",
            "module": "core"
        },
        {
            "file": "scripts/world.api",
            "line": 46,
            "description": "Returns world id, which is unique for each world in program",
            "itemtype": "property",
            "name": "id",
            "type": "{int}",
            "readonly": "",
            "class": "world",
            "module": "core"
        }
    ],
    "warnings": []
}